// Code generated by protoc-gen-go.
// source: Message.proto
// DO NOT EDIT!

/*
Package Message is a generated protocol buffer package.

It is generated from these files:
	Message.proto

It has these top-level messages:
	Message
	Request
	Response
	LoginRequest
	LoginResponse
	UserInfo
	HelpRequest
	HelpResponse
	BroadcastRequest
	BroadcastResponse
	ChatMessage
	ChatRequest
	ChatResponse
	UserEntity
	UserManageRequest
	UserManageResponse
*/
package Message

import proto "lib/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type MsgType int32

const (
	MsgType_Keepalive           MsgType = 1
	MsgType_Login_Request       MsgType = 1001
	MsgType_Login_Response      MsgType = 1002
	MsgType_Chat_Request        MsgType = 2001
	MsgType_Chat_Response       MsgType = 2002
	MsgType_Help_Request        MsgType = 3001
	MsgType_Help_Response       MsgType = 3002
	MsgType_Broadcast_Request   MsgType = 4001
	MsgType_Broadcast_Response  MsgType = 4002
	MsgType_UserManage_Request  MsgType = 5001
	MsgType_UserManage_Response MsgType = 5002
)

var MsgType_name = map[int32]string{
	1:    "Keepalive",
	1001: "Login_Request",
	1002: "Login_Response",
	2001: "Chat_Request",
	2002: "Chat_Response",
	3001: "Help_Request",
	3002: "Help_Response",
	4001: "Broadcast_Request",
	4002: "Broadcast_Response",
	5001: "UserManage_Request",
	5002: "UserManage_Response",
}
var MsgType_value = map[string]int32{
	"Keepalive":           1,
	"Login_Request":       1001,
	"Login_Response":      1002,
	"Chat_Request":        2001,
	"Chat_Response":       2002,
	"Help_Request":        3001,
	"Help_Response":       3002,
	"Broadcast_Request":   4001,
	"Broadcast_Response":  4002,
	"UserManage_Request":  5001,
	"UserManage_Response": 5002,
}

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}
func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}
func (x *MsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgType_value, data, "MsgType")
	if err != nil {
		return err
	}
	*x = MsgType(value)
	return nil
}

type BroadcastType int32

const (
	BroadcastType_Simple  BroadcastType = 1
	BroadcastType_Rich    BroadcastType = 2
	BroadcastType_OpenUrl BroadcastType = 3
	BroadcastType_Shell   BroadcastType = 4
	BroadcastType_AHK     BroadcastType = 5
)

var BroadcastType_name = map[int32]string{
	1: "Simple",
	2: "Rich",
	3: "OpenUrl",
	4: "Shell",
	5: "AHK",
}
var BroadcastType_value = map[string]int32{
	"Simple":  1,
	"Rich":    2,
	"OpenUrl": 3,
	"Shell":   4,
	"AHK":     5,
}

func (x BroadcastType) Enum() *BroadcastType {
	p := new(BroadcastType)
	*p = x
	return p
}
func (x BroadcastType) String() string {
	return proto.EnumName(BroadcastType_name, int32(x))
}
func (x *BroadcastType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BroadcastType_value, data, "BroadcastType")
	if err != nil {
		return err
	}
	*x = BroadcastType(value)
	return nil
}

type BroadcastScope int32

const (
	BroadcastScope_Staff       BroadcastScope = 0
	BroadcastScope_Department0 BroadcastScope = 1
	BroadcastScope_Department1 BroadcastScope = 2
	BroadcastScope_Department2 BroadcastScope = 3
	BroadcastScope_Department3 BroadcastScope = 4
	BroadcastScope_Department4 BroadcastScope = 5
	BroadcastScope_Department5 BroadcastScope = 6
	BroadcastScope_Department6 BroadcastScope = 7
	BroadcastScope_Department7 BroadcastScope = 8
	BroadcastScope_Department8 BroadcastScope = 9
)

var BroadcastScope_name = map[int32]string{
	0: "Staff",
	1: "Department0",
	2: "Department1",
	3: "Department2",
	4: "Department3",
	5: "Department4",
	6: "Department5",
	7: "Department6",
	8: "Department7",
	9: "Department8",
}
var BroadcastScope_value = map[string]int32{
	"Staff":       0,
	"Department0": 1,
	"Department1": 2,
	"Department2": 3,
	"Department3": 4,
	"Department4": 5,
	"Department5": 6,
	"Department6": 7,
	"Department7": 8,
	"Department8": 9,
}

func (x BroadcastScope) Enum() *BroadcastScope {
	p := new(BroadcastScope)
	*p = x
	return p
}
func (x BroadcastScope) String() string {
	return proto.EnumName(BroadcastScope_name, int32(x))
}
func (x *BroadcastScope) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BroadcastScope_value, data, "BroadcastScope")
	if err != nil {
		return err
	}
	*x = BroadcastScope(value)
	return nil
}

type UserState int32

const (
	UserState_Chat UserState = 1
	UserState_Hide UserState = 2
	UserState_Busy UserState = 3
	UserState_Away UserState = 4
	UserState_Dnd  UserState = 5
)

var UserState_name = map[int32]string{
	1: "Chat",
	2: "Hide",
	3: "Busy",
	4: "Away",
	5: "Dnd",
}
var UserState_value = map[string]int32{
	"Chat": 1,
	"Hide": 2,
	"Busy": 3,
	"Away": 4,
	"Dnd":  5,
}

func (x UserState) Enum() *UserState {
	p := new(UserState)
	*p = x
	return p
}
func (x UserState) String() string {
	return proto.EnumName(UserState_name, int32(x))
}
func (x *UserState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserState_value, data, "UserState")
	if err != nil {
		return err
	}
	*x = UserState(value)
	return nil
}

type ChatGroup int32

const (
	ChatGroup_Agent   ChatGroup = 1
	ChatGroup_Discuss ChatGroup = 2
	ChatGroup_Temp    ChatGroup = 3
)

var ChatGroup_name = map[int32]string{
	1: "Agent",
	2: "Discuss",
	3: "Temp",
}
var ChatGroup_value = map[string]int32{
	"Agent":   1,
	"Discuss": 2,
	"Temp":    3,
}

func (x ChatGroup) Enum() *ChatGroup {
	p := new(ChatGroup)
	*p = x
	return p
}
func (x ChatGroup) String() string {
	return proto.EnumName(ChatGroup_name, int32(x))
}
func (x *ChatGroup) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatGroup_value, data, "ChatGroup")
	if err != nil {
		return err
	}
	*x = ChatGroup(value)
	return nil
}

type ChatType int32

const (
	ChatType_Text               ChatType = 11
	ChatType_Text_Offline       ChatType = 12
	ChatType_Text_History       ChatType = 13
	ChatType_Text_Group         ChatType = 14
	ChatType_Text_Group_Offline ChatType = 15
	ChatType_Text_Group_History ChatType = 16
	ChatType_DisGroup_Create    ChatType = 21
	ChatType_DisGroup_Join      ChatType = 22
	ChatType_DisGroup_Exit      ChatType = 23
	ChatType_TmpGroup_Create    ChatType = 24
	ChatType_TmpGroup_Join      ChatType = 25
	ChatType_TmpGroup_Exit      ChatType = 26
)

var ChatType_name = map[int32]string{
	11: "Text",
	12: "Text_Offline",
	13: "Text_History",
	14: "Text_Group",
	15: "Text_Group_Offline",
	16: "Text_Group_History",
	21: "DisGroup_Create",
	22: "DisGroup_Join",
	23: "DisGroup_Exit",
	24: "TmpGroup_Create",
	25: "TmpGroup_Join",
	26: "TmpGroup_Exit",
}
var ChatType_value = map[string]int32{
	"Text":               11,
	"Text_Offline":       12,
	"Text_History":       13,
	"Text_Group":         14,
	"Text_Group_Offline": 15,
	"Text_Group_History": 16,
	"DisGroup_Create":    21,
	"DisGroup_Join":      22,
	"DisGroup_Exit":      23,
	"TmpGroup_Create":    24,
	"TmpGroup_Join":      25,
	"TmpGroup_Exit":      26,
}

func (x ChatType) Enum() *ChatType {
	p := new(ChatType)
	*p = x
	return p
}
func (x ChatType) String() string {
	return proto.EnumName(ChatType_name, int32(x))
}
func (x *ChatType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatType_value, data, "ChatType")
	if err != nil {
		return err
	}
	*x = ChatType(value)
	return nil
}

type UserManageType int32

const (
	UserManageType_Insert UserManageType = 1
	UserManageType_Delete UserManageType = 2
	UserManageType_Update UserManageType = 3
	UserManageType_Select UserManageType = 4
)

var UserManageType_name = map[int32]string{
	1: "Insert",
	2: "Delete",
	3: "Update",
	4: "Select",
}
var UserManageType_value = map[string]int32{
	"Insert": 1,
	"Delete": 2,
	"Update": 3,
	"Select": 4,
}

func (x UserManageType) Enum() *UserManageType {
	p := new(UserManageType)
	*p = x
	return p
}
func (x UserManageType) String() string {
	return proto.EnumName(UserManageType_name, int32(x))
}
func (x *UserManageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserManageType_value, data, "UserManageType")
	if err != nil {
		return err
	}
	*x = UserManageType(value)
	return nil
}

type Message struct {
	Type             *MsgType  `protobuf:"varint,1,req,name=type,enum=Message.MsgType" json:"type,omitempty"`
	Sequence         *uint32   `protobuf:"fixed32,2,req,name=sequence" json:"sequence,omitempty"`
	Request          *Request  `protobuf:"bytes,3,opt,name=request" json:"request,omitempty"`
	Response         *Response `protobuf:"bytes,4,opt,name=response" json:"response,omitempty"`
	Version          []byte    `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}

func (m *Message) GetType() MsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MsgType_Keepalive
}

func (m *Message) GetSequence() uint32 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return 0
}

func (m *Message) GetRequest() *Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Message) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Message) GetVersion() []byte {
	if m != nil {
		return m.Version
	}
	return nil
}

type Request struct {
	Login            *LoginRequest      `protobuf:"bytes,1,opt,name=login" json:"login,omitempty"`
	Chat             *ChatRequest       `protobuf:"bytes,2,opt,name=chat" json:"chat,omitempty"`
	Help             *HelpRequest       `protobuf:"bytes,3,opt,name=help" json:"help,omitempty"`
	Broadcast        *BroadcastRequest  `protobuf:"bytes,4,opt,name=broadcast" json:"broadcast,omitempty"`
	Usermanage       *UserManageRequest `protobuf:"bytes,5,opt,name=usermanage" json:"usermanage,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

func (m *Request) GetLogin() *LoginRequest {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *Request) GetChat() *ChatRequest {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *Request) GetHelp() *HelpRequest {
	if m != nil {
		return m.Help
	}
	return nil
}

func (m *Request) GetBroadcast() *BroadcastRequest {
	if m != nil {
		return m.Broadcast
	}
	return nil
}

func (m *Request) GetUsermanage() *UserManageRequest {
	if m != nil {
		return m.Usermanage
	}
	return nil
}

type Response struct {
	Result           *bool               `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	ErrorDescription []byte              `protobuf:"bytes,2,opt,name=error_description" json:"error_description,omitempty"`
	Login            *LoginResponse      `protobuf:"bytes,3,opt,name=login" json:"login,omitempty"`
	Chat             *ChatResponse       `protobuf:"bytes,4,opt,name=chat" json:"chat,omitempty"`
	Help             *HelpResponse       `protobuf:"bytes,5,opt,name=help" json:"help,omitempty"`
	Broadcast        *BroadcastResponse  `protobuf:"bytes,6,opt,name=broadcast" json:"broadcast,omitempty"`
	Usermanage       *UserManageResponse `protobuf:"bytes,7,opt,name=usermanage" json:"usermanage,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}

func (m *Response) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *Response) GetErrorDescription() []byte {
	if m != nil {
		return m.ErrorDescription
	}
	return nil
}

func (m *Response) GetLogin() *LoginResponse {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *Response) GetChat() *ChatResponse {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *Response) GetHelp() *HelpResponse {
	if m != nil {
		return m.Help
	}
	return nil
}

func (m *Response) GetBroadcast() *BroadcastResponse {
	if m != nil {
		return m.Broadcast
	}
	return nil
}

func (m *Response) GetUsermanage() *UserManageResponse {
	if m != nil {
		return m.Usermanage
	}
	return nil
}

type LoginRequest struct {
	Online           *bool  `protobuf:"varint,1,opt,name=online" json:"online,omitempty"`
	Username         []byte `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password         []byte `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Visibility       *bool  `protobuf:"varint,4,opt,name=visibility" json:"visibility,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}

func (m *LoginRequest) GetOnline() bool {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return false
}

func (m *LoginRequest) GetUsername() []byte {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *LoginRequest) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *LoginRequest) GetVisibility() bool {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return false
}

type LoginResponse struct {
	Agentinfo        *string `protobuf:"bytes,1,opt,name=agentinfo" json:"agentinfo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}

func (m *LoginResponse) GetAgentinfo() string {
	if m != nil && m.Agentinfo != nil {
		return *m.Agentinfo
	}
	return ""
}

type UserInfo struct {
	From             []byte  `protobuf:"bytes,1,req,name=from" json:"from,omitempty"`
	Realname         *string `protobuf:"bytes,2,opt,name=realname" json:"realname,omitempty"`
	Location         *string `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	Time             []byte  `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}

func (m *UserInfo) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *UserInfo) GetRealname() string {
	if m != nil && m.Realname != nil {
		return *m.Realname
	}
	return ""
}

func (m *UserInfo) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

func (m *UserInfo) GetTime() []byte {
	if m != nil {
		return m.Time
	}
	return nil
}

type HelpRequest struct {
	From             *UserInfo `protobuf:"bytes,1,req,name=from" json:"from,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *HelpRequest) Reset()         { *m = HelpRequest{} }
func (m *HelpRequest) String() string { return proto.CompactTextString(m) }
func (*HelpRequest) ProtoMessage()    {}

func (m *HelpRequest) GetFrom() *UserInfo {
	if m != nil {
		return m.From
	}
	return nil
}

type HelpResponse struct {
	Helper           *UserInfo `protobuf:"bytes,1,req,name=helper" json:"helper,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *HelpResponse) Reset()         { *m = HelpResponse{} }
func (m *HelpResponse) String() string { return proto.CompactTextString(m) }
func (*HelpResponse) ProtoMessage()    {}

func (m *HelpResponse) GetHelper() *UserInfo {
	if m != nil {
		return m.Helper
	}
	return nil
}

type BroadcastRequest struct {
	From             []byte          `protobuf:"bytes,1,req,name=from" json:"from,omitempty"`
	Scope            *BroadcastScope `protobuf:"varint,2,req,name=scope,enum=Message.BroadcastScope" json:"scope,omitempty"`
	To               [][]byte        `protobuf:"bytes,3,rep,name=to" json:"to,omitempty"`
	Type             *BroadcastType  `protobuf:"varint,4,req,name=type,enum=Message.BroadcastType" json:"type,omitempty"`
	Content          *string         `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *BroadcastRequest) Reset()         { *m = BroadcastRequest{} }
func (m *BroadcastRequest) String() string { return proto.CompactTextString(m) }
func (*BroadcastRequest) ProtoMessage()    {}

func (m *BroadcastRequest) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *BroadcastRequest) GetScope() BroadcastScope {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return BroadcastScope_Staff
}

func (m *BroadcastRequest) GetTo() [][]byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *BroadcastRequest) GetType() BroadcastType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BroadcastType_Simple
}

func (m *BroadcastRequest) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

type BroadcastResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *BroadcastResponse) Reset()         { *m = BroadcastResponse{} }
func (m *BroadcastResponse) String() string { return proto.CompactTextString(m) }
func (*BroadcastResponse) ProtoMessage()    {}

type ChatMessage struct {
	Time             []byte  `protobuf:"bytes,1,req,name=time" json:"time,omitempty"`
	Msg              *string `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}

func (m *ChatMessage) GetTime() []byte {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ChatMessage) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type ChatRequest struct {
	Type             *ChatType `protobuf:"varint,1,req,name=type,enum=Message.ChatType" json:"type,omitempty"`
	From             []byte    `protobuf:"bytes,2,req,name=from" json:"from,omitempty"`
	To               []byte    `protobuf:"bytes,3,opt,name=to" json:"to,omitempty"`
	Fromgroup        *uint32   `protobuf:"fixed32,4,opt,name=fromgroup" json:"fromgroup,omitempty"`
	Togroup          *uint32   `protobuf:"fixed32,5,opt,name=togroup" json:"togroup,omitempty"`
	Msg              *string   `protobuf:"bytes,6,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ChatRequest) Reset()         { *m = ChatRequest{} }
func (m *ChatRequest) String() string { return proto.CompactTextString(m) }
func (*ChatRequest) ProtoMessage()    {}

func (m *ChatRequest) GetType() ChatType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ChatType_Text
}

func (m *ChatRequest) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *ChatRequest) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *ChatRequest) GetFromgroup() uint32 {
	if m != nil && m.Fromgroup != nil {
		return *m.Fromgroup
	}
	return 0
}

func (m *ChatRequest) GetTogroup() uint32 {
	if m != nil && m.Togroup != nil {
		return *m.Togroup
	}
	return 0
}

func (m *ChatRequest) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type ChatResponse struct {
	Offline          []*ChatMessage `protobuf:"bytes,1,rep,name=offline" json:"offline,omitempty"`
	Offlinegroup     []*ChatMessage `protobuf:"bytes,2,rep,name=offlinegroup" json:"offlinegroup,omitempty"`
	Histroy          []*ChatMessage `protobuf:"bytes,3,rep,name=histroy" json:"histroy,omitempty"`
	Historygroup     []*ChatMessage `protobuf:"bytes,4,rep,name=historygroup" json:"historygroup,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ChatResponse) Reset()         { *m = ChatResponse{} }
func (m *ChatResponse) String() string { return proto.CompactTextString(m) }
func (*ChatResponse) ProtoMessage()    {}

func (m *ChatResponse) GetOffline() []*ChatMessage {
	if m != nil {
		return m.Offline
	}
	return nil
}

func (m *ChatResponse) GetOfflinegroup() []*ChatMessage {
	if m != nil {
		return m.Offlinegroup
	}
	return nil
}

func (m *ChatResponse) GetHistroy() []*ChatMessage {
	if m != nil {
		return m.Histroy
	}
	return nil
}

func (m *ChatResponse) GetHistorygroup() []*ChatMessage {
	if m != nil {
		return m.Historygroup
	}
	return nil
}

type UserEntity struct {
	Username         []byte  `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Ipaddress        []byte  `protobuf:"bytes,2,opt,name=ipaddress" json:"ipaddress,omitempty"`
	Agentinfo        *string `protobuf:"bytes,3,opt,name=agentinfo" json:"agentinfo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserEntity) Reset()         { *m = UserEntity{} }
func (m *UserEntity) String() string { return proto.CompactTextString(m) }
func (*UserEntity) ProtoMessage()    {}

func (m *UserEntity) GetUsername() []byte {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *UserEntity) GetIpaddress() []byte {
	if m != nil {
		return m.Ipaddress
	}
	return nil
}

func (m *UserEntity) GetAgentinfo() string {
	if m != nil && m.Agentinfo != nil {
		return *m.Agentinfo
	}
	return ""
}

type UserManageRequest struct {
	Type             *UserManageType `protobuf:"varint,1,opt,name=type,enum=Message.UserManageType" json:"type,omitempty"`
	Users            []*UserEntity   `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *UserManageRequest) Reset()         { *m = UserManageRequest{} }
func (m *UserManageRequest) String() string { return proto.CompactTextString(m) }
func (*UserManageRequest) ProtoMessage()    {}

func (m *UserManageRequest) GetType() UserManageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return UserManageType_Insert
}

func (m *UserManageRequest) GetUsers() []*UserEntity {
	if m != nil {
		return m.Users
	}
	return nil
}

type UserManageResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UserManageResponse) Reset()         { *m = UserManageResponse{} }
func (m *UserManageResponse) String() string { return proto.CompactTextString(m) }
func (*UserManageResponse) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("Message.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("Message.BroadcastType", BroadcastType_name, BroadcastType_value)
	proto.RegisterEnum("Message.BroadcastScope", BroadcastScope_name, BroadcastScope_value)
	proto.RegisterEnum("Message.UserState", UserState_name, UserState_value)
	proto.RegisterEnum("Message.ChatGroup", ChatGroup_name, ChatGroup_value)
	proto.RegisterEnum("Message.ChatType", ChatType_name, ChatType_value)
	proto.RegisterEnum("Message.UserManageType", UserManageType_name, UserManageType_value)
}
